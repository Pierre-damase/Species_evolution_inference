630 smcpp.commands.command DEBUG ['/home/damase/miniconda3/envs/sei-3.8.5/bin/smc++', 'estimate', '--em-iterations', '100', '-o', './Data/SMC/decline/tau=0.0_kappa=2.8-KNOTS=1/', '--knots', '1', '8e-06', './Data/SMC/decline/smc_tau=0.0_kappa=2.8.gz']
630 smcpp.commands.command DEBUG Namespace(Nmax=1000.0, Nmin=0.001, algorithm='L-BFGS-B', base='model', command='estimate', cores=None, data=['./Data/SMC/decline/smc_tau=0.0_kappa=2.8.gz'], em_iterations=100, ftol=0.0001, knots=1, lambda_=None, length_cutoff=None, mu=8e-06, multi=False, no_initialize=False, nonseg_cutoff=None, outdir='./Data/SMC/decline/tau=0.0_kappa=2.8-KNOTS=1/', polarization_error=0.5, r=None, regularization_penalty=6, seed=0, spline='piecewise', thinning=None, timepoints=None, unfold=False, verbose=0, w=100, xtol=0.1)
630 smcpp.analysis.base INFO theta: 0.000100
631 smcpp.analysis.base INFO rho: 0.000100
631 smcpp.analysis.base DEBUG Polarization error p=0.500000
631 smcpp.data_filter DEBUG LoadData()
631 smcpp.data_filter INFO Loading data...
682 smcpp.data_filter INFO 0.00 Gb of data
682 smcpp.data_filter DEBUG Contig(pid=('Pop1',), data=array([[ 5,  0,  0, 18],
       [ 1,  0, 14, 18],
       [47,  0,  0, 18],
       ...,
       [21,  0,  0, 18],
       [ 1,  0, 10, 18],
       [22,  0,  0, 18]], dtype=int32), n=array([18]), a=array([2]), fn='./Data/SMC/decline/smc_tau=0.0_kappa=2.8.gz')
838 smcpp.data_filter INFO 1 population
838 smcpp.data_filter DEBUG RecodeNonseg(cutoff=None)
839 smcpp.data_filter DEBUG Compress()
1772 smcpp.data_filter DEBUG BreakLongSpans(cutoff=100000)
1773 smcpp.data_filter DEBUG DropSmallContigs(cutoff=100000)
1773 smcpp.data_filter DEBUG Watterson()
1774 smcpp.data_filter DEBUG sites: 5235/555636	watterson:0.009422
1774 smcpp.data_filter DEBUG CountMutations(w=125)
1778 smcpp.data_filter DEBUG mutation counts in 125bp windows: min=0 .05=0 .95=0 max=6
1806 py.warnings  WARNING /home/damase/miniconda3/envs/sei-3.8.5/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,

